{"version":3,"sources":["api/client.js","api/scenicSpot.js","components/ScenicSpotListItem.js","components/LoadingStatus.js","components/ScenicSpot.js","store/actions/scenicSpotActions.js","components/NotFound.js","components/Welcome.js","components/layout/Navbar.js","App.js","store/reducers/rootReducer.js","index.js"],"names":["client","axios","create","baseURL","params","format","interceptors","request","use","config","headers","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","Authorization","getAuthorizationHeader","synchronous","getScenicSpot","skip","a","numOfScenicSpot","city","get","$skip","$top","res","data","ScenicSpotListItem","spot","className","Name","Class1","Class2","Class3","Description","DescriptionDetail","Address","Phone","ID","LoadingStatus","loadingStatus","isLoading","cityList","undefined","ScenicSpot","props","checkScrollPosition","e","hasMoreDataToFetch","target","offsetHeight","scrollTop","scrollHeight","state","isFetching","setState","fetchData","console","error","spots","length","numOfScenicSpotToFetch","scenicSpots","saveScenicSpot","updateCityInfo","spotListRef","React","createRef","this","prevProps","oldCity","newCity","current","includes","to","ScenicSpotList","map","onScroll","ref","Component","connect","ownProps","match","dispatch","newData","type","NotFound","location","useLocation","pathname","Welcome","cities","value","name","Navbar","selectedCity","handleSelectCity","history","push","selectAllCity","matchPath","window","path","cityOptions","htmlFor","id","onChange","placeholder","withRouter","App","exact","component","initState","Taiwan","Taipei","NewTaipei","Taoyuan","Taichung","Tainan","Kaohsiung","Keelung","Hsinchu","HsinchuCounty","MiaoliCounty","ChanghuaCounty","NantouCounty","YunlinCounty","ChiayiCounty","Chiayi","PingtungCounty","YilanCounty","HualienCounty","TaitungCounty","KinmenCounty","PenghuCounty","LienchiangCounty","rootReducer","action","newSpots","newHasMoreDataToFetch","store","createStore","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"6SAiBMA,EAASC,IAAMC,OAAO,CAC1BC,QAAS,uCACTC,OAAQ,CACNC,OAAQ,UAIZL,EAAOM,aAAaC,QAAQC,KAC1B,SAAUC,GAER,OADAA,EAAOC,QAAP,2BAAsBD,EAAOC,SAvBF,WAC7B,IAGMC,GAAY,IAAIC,MAAOC,cACvBC,EAAS,IAAIC,IAAM,QAAS,QAClCD,EAAOE,WAJQ,8BAIW,QAC1BF,EAAOG,OAAO,WAAaN,GAC3B,IAAMO,EAAOJ,EAAOK,QAAQ,OAG5B,MAAO,CAAEC,cAFU,yBARL,mCAQK,kEAAoFF,EAApF,KAEoB,SAAUP,GAYNU,IAClCZ,IAET,KACA,CAAEa,aAAa,IAGFtB,QC/BFuB,EAAa,uCAAG,WAAOC,GAAP,+BAAAC,EAAA,6DAAaC,EAAb,+BAA+B,GAAIC,EAAnC,+BAA0C,GAA1C,SACT3B,EAAO4B,IAAP,8BAAkCD,GAAQ,CAC1DvB,OAAQ,CACNyB,MAAOL,EACPM,KAAMJ,KAJiB,cACrBK,EADqB,yBAOpBA,EAAIC,MAPgB,2CAAH,sD,OCkBXC,MAlBf,YAAuC,IAATC,EAAQ,EAARA,KAC5B,OACE,qBAAkBC,UAAU,wCAA5B,UACE,oBAAIA,UAAU,UAAd,SAAyBD,EAAKE,OAC9B,sBAAKD,UAAU,OAAf,UACGD,EAAKG,QAAU,qBAAKF,UAAU,MAAf,SAAsBD,EAAKG,SAC1CH,EAAKI,QAAU,qBAAKH,UAAU,MAAf,SAAsBD,EAAKI,SAC1CJ,EAAKK,QAAU,qBAAKJ,UAAU,MAAf,SAAsBD,EAAKK,YAE7C,mBAAGJ,UAAU,iBAAb,SAA+BD,EAAKM,aAAeN,EAAKO,oBACxD,gCACE,oBAAGN,UAAU,iBAAb,+BAAkCD,EAAKQ,WACvC,oBAAGP,UAAU,iBAAb,+BAAkCD,EAAKS,cAVlCT,EAAKU,KCIHC,MANf,YAAuC,IAC/BC,EAD8B,EAAbC,UACW,qBAAQ,+DAE1C,OAAO,6BAAKD,K,QCKRE,EAAW,MACfC,EACA,SACA,YACA,UACA,WACA,SACA,YACA,UACA,UACA,gBACA,eACA,iBACA,eACA,eACA,eACA,SACA,iBACA,cACA,gBACA,gBACA,eACA,eACA,oBAGIC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,oBAVmB,uCAUG,WAAOC,GAAP,qBAAA5B,EAAA,yDACf,EAAK0B,MAAMG,mBADI,sDAG8BD,EAAEE,OAA5CC,EAHY,EAGZA,aAAcC,EAHF,EAGEA,UAAWC,EAHb,EAGaA,aACf,IAAdD,GAAmBD,EAAeC,IAAcC,GAAiB,EAAKC,MAAMC,WAJ5D,wBAKlB,EAAKC,SAAS,CAAED,YAAY,IALV,kBAOV,EAAKE,YAPK,yDAShBC,QAAQC,MAAR,MATgB,QAWlB,EAAKH,SAAS,CAAED,YAAY,IAXV,0DAVH,wDAyBnBE,UAzBmB,sBAyBP,8BAAArC,EAAA,yDAEL,EAAK0B,MAAMG,mBAFN,wDAKqB,EAAKH,MAAMc,MAAMC,OAA1CC,EA1DiB,GAqDb,SAOgB5C,EACxB,EAAK4B,MAAMc,MAAMC,OACjBC,EACA,EAAKhB,MAAMxB,MAVH,OAOJyC,EAPI,OAYV,EAAKjB,MAAMkB,eAAe,EAAKlB,MAAMxB,KAAMyC,GAGvCA,EAAYF,OApEO,IAqErB,EAAKf,MAAMmB,eAAe,EAAKnB,MAAMxB,MAAM,GAhBnC,2CAtBV,EAAKgC,MAAQ,CACXC,YAAY,GAEd,EAAKW,YAAcC,IAAMC,YANR,E,4FA6CnB,sBAAAhD,EAAA,sDACEiD,KAAKZ,YADP,gD,6HAKA,WAAyBa,GAAzB,iBAAAlD,EAAA,sDACQmD,EAAUD,EAAUhD,KACpBkD,EAAUH,KAAKvB,MAAMxB,KAEvBiD,IAAYC,IACdH,KAAKH,YAAYO,QAAQrB,UAAY,EACL,IAA5BiB,KAAKvB,MAAMc,MAAMC,QACnBQ,KAAKZ,aAPX,gD,2EAYA,WAEE,IAAKd,EAAS+B,SAASL,KAAKvB,MAAMxB,MAChC,OAAO,cAAC,IAAD,CAAUqD,GAAG,gBAGtB,IAAMC,EAAiBP,KAAKvB,MAAMc,MAAMiB,KAAI,SAAChD,GAC3C,OAAO,cAAC,EAAD,CAAkCA,KAAMA,GAAfA,EAAKU,OAGjCG,EAAY2B,KAAKf,MAAMC,YAA0C,IAA5Bc,KAAKvB,MAAMc,MAAMC,OAE5D,OACE,qBAAK/B,UAAU,2BAAf,SACE,qBACEA,UAAU,sCACVgD,SAAUT,KAAKtB,oBACfgC,IAAKV,KAAKH,YAHZ,UAKGU,EACAP,KAAKvB,MAAMG,oBAAsB,cAAC,EAAD,CAAeP,UAAWA,a,GAnF7CsC,aAgHVC,eAtBS,SAAC3B,EAAO4B,GAC9B,IAAM5D,EAAO4D,EAASC,MAAMpF,OAAOuB,KAC7B2B,OACKL,IAATtB,EAAqBgC,EAAML,mBAAmB3B,GAAQgC,EAAML,mBAAN,OACxD,MAAO,CACLW,MAAON,EAAMM,MAAMtC,IAASgC,EAAMM,MAAN,OAC5BX,qBACA3B,WAIuB,SAAC8D,GAC1B,MAAO,CACLpB,eAAgB,SAAC1C,EAAM+D,GACrBD,EC5IwB,WAC5B,MAAO,CACLE,KAAM,mBACNhE,KAH6D,uDAA3B,SAIlC+D,QAJ6D,uDAAP,ID4I3CrB,CAAe1C,EAAM+D,KAEhCpB,eAAgB,SAAC3C,EAAM2B,GACrBmC,ECvIwB,WAC5B,MAAO,CACLE,KAAM,mBACNhE,KAHmE,uDAAjC,SAIlC2B,mBAJmE,wCDuIxDgB,CAAe3C,EAAM2B,QAKrBgC,CAA6CpC,GErI7C0C,MAZf,WACE,IAAMC,EAAWC,cAEjB,OACE,8BACE,2DACY,+BAAOD,EAASE,iBCGnBC,MATf,WACE,OACE,gCACE,gHACA,cAAC,IAAD,CAAMhB,GAAG,cAAT,sDCJAiB,EAAS,CACb,CAAEC,MAAO,GAAIC,KAAM,mCACnB,CAAED,MAAO,SAAUC,KAAM,6BACzB,CAAED,MAAO,YAAaC,KAAM,gCAC5B,CAAED,MAAO,UAAWC,KAAM,8BAC1B,CAAED,MAAO,WAAYC,KAAM,+BAC3B,CAAED,MAAO,SAAUC,KAAM,6BACzB,CAAED,MAAO,YAAaC,KAAM,gCAC5B,CAAED,MAAO,UAAWC,KAAM,8BAC1B,CAAED,MAAO,UAAWC,KAAM,8BAC1B,CAAED,MAAO,gBAAiBC,KAAM,oCAChC,CAAED,MAAO,eAAgBC,KAAM,mCAC/B,CAAED,MAAO,iBAAkBC,KAAM,qCACjC,CAAED,MAAO,eAAgBC,KAAM,mCAC/B,CAAED,MAAO,eAAgBC,KAAM,mCAC/B,CAAED,MAAO,eAAgBC,KAAM,mCAC/B,CAAED,MAAO,SAAUC,KAAM,6BACzB,CAAED,MAAO,iBAAkBC,KAAM,qCACjC,CAAED,MAAO,cAAeC,KAAM,kCAC9B,CAAED,MAAO,gBAAiBC,KAAM,oCAChC,CAAED,MAAO,gBAAiBC,KAAM,oCAChC,CAAED,MAAO,eAAgBC,KAAM,mCAC/B,CAAED,MAAO,eAAgBC,KAAM,mCAC/B,CAAED,MAAO,mBAAoBC,KAAM,wCAG/BC,E,4MACJzC,MAAQ,CACN0C,aAAc,I,EAIhBC,iBAAmB,SAACjD,GAClB,EAAKQ,SAAS,CAAEwC,aAAchD,EAAEE,OAAO2C,QACvC,EAAK/C,MAAMoD,QAAQC,KAAnB,sBAAuCnD,EAAEE,OAAO2C,S,EAIlDO,cAAgB,SAACpD,GACf,EAAKQ,SAAS,CAAEwC,aAAc,KAC9B,EAAKlD,MAAMoD,QAAQC,KAAK,gB,uDAI1B,WACE,IAAMhB,EAAQkB,YAAUC,OAAOd,SAASE,SAAU,CAChDa,KAAM,uBAEJpB,GACFd,KAAKb,SAAS,CAAEwC,aAAcb,EAAMpF,OAAOuB,S,oBAI/C,WACE,IAAMkF,EAAcZ,EAAOf,KAAI,SAACvD,GAC9B,OACE,wBAAQuE,MAAOvE,EAAKuE,MAApB,SACGvE,EAAKwE,MADwBxE,EAAKuE,UAMzC,OACE,qBAAK/D,UAAU,+BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAOA,UAAU,0BAA0B2E,QAAQ,aAAnD,wDAGA,qBAAK3E,UAAU,MAAf,SACE,wBACEA,UAAU,cACV4E,GAAG,aACHC,SAAUtC,KAAK4B,iBACfJ,MAAOxB,KAAKf,MAAM0C,aAJpB,SAMGQ,MAGL,qBAAK1E,UAAU,MAAf,SACE,uBAAOwD,KAAK,OAAOxD,UAAU,eAAe8E,YAAY,sD,GAtDjD5B,aA+DN6B,cAAWd,GCvEXe,MAff,WACE,OACE,sBAAKhF,UAAU,gCAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,6CAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyE,KAAK,IAAIQ,OAAK,EAACC,UAAWrB,IACjC,cAAC,IAAD,CAAOY,KAAK,qBAAqBS,UAAWnE,IAC5C,cAAC,IAAD,CAAO0D,KAAK,IAAIS,UAAWzB,a,wBCd/B0B,EAAY,CAChBrD,MAAO,CACLsD,OAAQ,GACRC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,cAAe,GACfC,aAAc,GACdC,eAAgB,GAChBC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,OAAQ,GACRC,eAAgB,GAChBC,YAAa,GACbC,cAAe,GACfC,cAAe,GACfC,aAAc,GACdC,aAAc,GACdC,iBAAkB,IAEpBjF,YAAY,EACZN,mBAAoB,CAClBiE,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,SAAS,EACTC,eAAe,EACfC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,QAAQ,EACRC,gBAAgB,EAChBC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,cAAc,EACdC,cAAc,EACdC,kBAAkB,IAuCPC,EAnCK,WAAgC,IAA/BnF,EAA8B,uDAAtB2D,EAAWyB,EAAW,uCACjD,OAAQA,EAAOpD,MAEb,IAAK,mBAAqB,IAChBhE,EAAkBoH,EAAlBpH,KAAM+D,EAAYqD,EAAZrD,QAERsD,EAAQ,2BACTrF,EAAMM,OADG,kBAEXtC,EAFW,sBAEAgC,EAAMM,MAAMtC,IAFZ,YAEsB+D,MAEpC,OAAO,2BACF/B,GADL,IAEEM,MAAO+E,IAKX,IAAK,mBAAqB,IAChBrH,EAA6BoH,EAA7BpH,KAAM2B,EAAuByF,EAAvBzF,mBAER2F,EAAqB,2BACtBtF,EAAML,oBADgB,kBAExB3B,EAAO2B,IAEV,OAAO,2BACFK,GADL,IAEEL,mBAAoB2F,IAIxB,QACE,OAAOtF,IC5EPuF,EAAQC,YAAYL,GAE1BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAQK,SAAUC,mCAAlB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.a41ce39e.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport jsSHA from 'jssha'\r\n\r\nconst getAuthorizationHeader = () => {\r\n  const AppID = '6719c6e7e3564c948c45a978bc4a9fc2'\r\n  const AppKey = 'tOl73VQNaCJmrbt_FvSSQnBM7JM'\r\n\r\n  const GMTString = new Date().toGMTString()\r\n  const ShaObj = new jsSHA('SHA-1', 'TEXT')\r\n  ShaObj.setHMACKey(AppKey, 'TEXT')\r\n  ShaObj.update('x-date: ' + GMTString)\r\n  const HMAC = ShaObj.getHMAC('B64')\r\n  const Authorization = `hmac username=\"${AppID}\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"${HMAC}\"`\r\n\r\n  return { Authorization: Authorization, 'X-Date': GMTString }\r\n}\r\n\r\nconst client = axios.create({\r\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2',\r\n  params: {\r\n    format: 'JSON',\r\n  },\r\n})\r\n\r\nclient.interceptors.request.use(\r\n  function (config) {\r\n    config.headers = { ...config.headers, ...getAuthorizationHeader() }\r\n    return config\r\n  },\r\n  null,\r\n  { synchronous: true }\r\n)\r\n\r\nexport default client\r\n","import client from './client'\r\n\r\nexport const getScenicSpot = async (skip, numOfScenicSpot = 30, city = '') => {\r\n  const res = await client.get(`/Tourism/ScenicSpot/${city}`, {\r\n    params: {\r\n      $skip: skip,\r\n      $top: numOfScenicSpot,\r\n    },\r\n  })\r\n  return res.data\r\n}\r\n","import React from 'react'\r\n\r\nfunction ScenicSpotListItem({ spot }) {\r\n  return (\r\n    <li key={spot.ID} className=\"scenic-spot-list-item list-group-item\">\r\n      <h2 className=\"fw-bold\">{spot.Name}</h2>\r\n      <div className=\"mb-2\">\r\n        {spot.Class1 && <div className=\"tag\">{spot.Class1}</div>}\r\n        {spot.Class2 && <div className=\"tag\">{spot.Class2}</div>}\r\n        {spot.Class3 && <div className=\"tag\">{spot.Class3}</div>}\r\n      </div>\r\n      <p className=\"text-dark my-3\">{spot.Description || spot.DescriptionDetail}</p>\r\n      <div>\r\n        <p className=\"m-0 text-muted\">地址：{spot.Address}</p>\r\n        <p className=\"m-0 text-muted\">電話：{spot.Phone}</p>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ScenicSpotListItem\r\n","import React from 'react'\r\n\r\nfunction LoadingStatus({ isLoading }) {\r\n  const loadingStatus = isLoading ? '載入中' : '下滑至底載入更多資料'\r\n\r\n  return <li>{loadingStatus}</li>\r\n}\r\n\r\nexport default LoadingStatus\r\n","import React, { Component } from 'react'\r\nimport { getScenicSpot } from '../api/scenicSpot'\r\nimport ScenicSpotListItem from './ScenicSpotListItem'\r\nimport LoadingStatus from './LoadingStatus'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { saveScenicSpot, updateCityInfo } from '../store/actions/scenicSpotActions'\r\n\r\nconst NUM_OF_FIRST_LOAD = 30\r\nconst NUM_OF_SCROLL_LOAD = 30\r\nconst cityList = [\r\n  undefined, // 全台\r\n  'Taipei',\r\n  'NewTaipei',\r\n  'Taoyuan',\r\n  'Taichung',\r\n  'Tainan',\r\n  'Kaohsiung',\r\n  'Keelung',\r\n  'Hsinchu',\r\n  'HsinchuCounty',\r\n  'MiaoliCounty',\r\n  'ChanghuaCounty',\r\n  'NantouCounty',\r\n  'YunlinCounty',\r\n  'ChiayiCounty',\r\n  'Chiayi',\r\n  'PingtungCounty',\r\n  'YilanCounty',\r\n  'HualienCounty',\r\n  'TaitungCounty',\r\n  'KinmenCounty',\r\n  'PenghuCounty',\r\n  'LienchiangCounty',\r\n]\r\n\r\nclass ScenicSpot extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isFetching: false,\r\n    }\r\n    this.spotListRef = React.createRef()\r\n  }\r\n\r\n  // 滾動時檢查是否到達最底，是則載入新資料\r\n  checkScrollPosition = async (e) => {\r\n    if (!this.props.hasMoreDataToFetch) return // 若已經沒有新資料可抓取，則不需檢查了\r\n\r\n    const { offsetHeight, scrollTop, scrollHeight } = e.target\r\n    if (scrollTop !== 0 && offsetHeight + scrollTop === scrollHeight && !this.state.isFetching) {\r\n      this.setState({ isFetching: true })\r\n      try {\r\n        await this.fetchData()\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n      this.setState({ isFetching: false })\r\n    }\r\n  }\r\n\r\n  fetchData = async () => {\r\n    // 先檢查是否還有資料可以抓取\r\n    if (!this.props.hasMoreDataToFetch) return\r\n\r\n    // 檢查是首次抓取還是已經抓過資料，調整抓取的數量\r\n    const numOfScenicSpotToFetch = this.props.spots.length ? NUM_OF_SCROLL_LOAD : NUM_OF_FIRST_LOAD\r\n\r\n    const scenicSpots = await getScenicSpot(\r\n      this.props.spots.length,\r\n      numOfScenicSpotToFetch,\r\n      this.props.city\r\n    )\r\n    this.props.saveScenicSpot(this.props.city, scenicSpots)\r\n\r\n    // 若抓到的資料比想要的資料少，代表沒有更多資料可以抓了\r\n    if (scenicSpots.length < NUM_OF_SCROLL_LOAD) {\r\n      this.props.updateCityInfo(this.props.city, false)\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.fetchData()\r\n  }\r\n\r\n  // 檢查是否換了不同的地區\r\n  async componentDidUpdate(prevProps) {\r\n    const oldCity = prevProps.city\r\n    const newCity = this.props.city\r\n\r\n    if (oldCity !== newCity) {\r\n      this.spotListRef.current.scrollTop = 0\r\n      if (this.props.spots.length === 0) {\r\n        this.fetchData()\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // 確認城市名稱是正確的\r\n    if (!cityList.includes(this.props.city)) {\r\n      return <Redirect to=\"/scenicSpot\" />\r\n    }\r\n\r\n    const ScenicSpotList = this.props.spots.map((spot) => {\r\n      return <ScenicSpotListItem key={spot.ID} spot={spot} />\r\n    })\r\n\r\n    const isLoading = this.state.isFetching || this.props.spots.length === 0\r\n\r\n    return (\r\n      <div className=\"scenicSpot overflow-auto\">\r\n        <ul\r\n          className=\"list-group overflow-auto h-100 py-3\"\r\n          onScroll={this.checkScrollPosition}\r\n          ref={this.spotListRef}\r\n        >\r\n          {ScenicSpotList}\r\n          {this.props.hasMoreDataToFetch && <LoadingStatus isLoading={isLoading} />}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const city = ownProps.match.params.city\r\n  const hasMoreDataToFetch =\r\n    city !== undefined ? state.hasMoreDataToFetch[city] : state.hasMoreDataToFetch['Taiwan']\r\n  return {\r\n    spots: state.spots[city] || state.spots['Taiwan'],\r\n    hasMoreDataToFetch,\r\n    city,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    saveScenicSpot: (city, newData) => {\r\n      dispatch(saveScenicSpot(city, newData))\r\n    },\r\n    updateCityInfo: (city, hasMoreDataToFetch) => {\r\n      dispatch(updateCityInfo(city, hasMoreDataToFetch))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScenicSpot)\r\n","export const saveScenicSpot = (city = 'Taiwan', newData = []) => {\r\n  return {\r\n    type: 'SAVE_SCENIC_SPOT',\r\n    city,\r\n    newData,\r\n  }\r\n}\r\n\r\nexport const updateCityInfo = (city = 'Taiwan', hasMoreDataToFetch) => {\r\n  return {\r\n    type: 'UPDATE_CITY_INFO',\r\n    city,\r\n    hasMoreDataToFetch,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nfunction NotFound() {\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Oops! 找不到 <code>{location.pathname}</code>\r\n      </h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Welcome() {\r\n  return (\r\n    <div>\r\n      <h1>歡迎光臨｡:.ﾟヽ(*´∀`)ﾉﾟ.:｡</h1>\r\n      <Link to=\"/scenicSpot\">前往查看景點</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Welcome\r\n","import React, { Component } from 'react'\r\nimport { withRouter, matchPath } from 'react-router-dom'\r\n\r\nconst cities = [\r\n  { value: '', name: '全台景點 Taiwan' },\r\n  { value: 'Taipei', name: '臺北市 Taipei' },\r\n  { value: 'NewTaipei', name: '新北市 NewTaipei' },\r\n  { value: 'Taoyuan', name: '桃園市 Taoyuan' },\r\n  { value: 'Taichung', name: '臺中市 Taichung' },\r\n  { value: 'Tainan', name: '臺南市 Tainan' },\r\n  { value: 'Kaohsiung', name: '高雄市 Kaohsiung' },\r\n  { value: 'Keelung', name: '基隆市 Keelung' },\r\n  { value: 'Hsinchu', name: '新竹市 Hsinchu' },\r\n  { value: 'HsinchuCounty', name: '新竹縣 HsinchuCounty' },\r\n  { value: 'MiaoliCounty', name: '苗栗縣 MiaoliCounty' },\r\n  { value: 'ChanghuaCounty', name: '彰化縣 ChanghuaCounty' },\r\n  { value: 'NantouCounty', name: '南投縣 NantouCounty' },\r\n  { value: 'YunlinCounty', name: '雲林縣 YunlinCounty' },\r\n  { value: 'ChiayiCounty', name: '嘉義縣 ChiayiCounty' },\r\n  { value: 'Chiayi', name: '嘉義市 Chiayi' },\r\n  { value: 'PingtungCounty', name: '屏東縣 PingtungCounty' },\r\n  { value: 'YilanCounty', name: '宜蘭縣 YilanCounty' },\r\n  { value: 'HualienCounty', name: '花蓮縣 HualienCounty' },\r\n  { value: 'TaitungCounty', name: '臺東縣 TaitungCounty' },\r\n  { value: 'KinmenCounty', name: '金門縣 KinmenCounty' },\r\n  { value: 'PenghuCounty', name: '澎湖縣 PenghuCounty' },\r\n  { value: 'LienchiangCounty', name: '連江縣 LienchiangCounty' },\r\n]\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    selectedCity: '',\r\n  }\r\n\r\n  // 選擇特定城市\r\n  handleSelectCity = (e) => {\r\n    this.setState({ selectedCity: e.target.value })\r\n    this.props.history.push(`/scenicSpot/${e.target.value}`)\r\n  }\r\n\r\n  // 選擇所有城市\r\n  selectAllCity = (e) => {\r\n    this.setState({ selectedCity: '' })\r\n    this.props.history.push('/scenicSpot')\r\n  }\r\n\r\n  // 首次進入時，依照url更新選項\r\n  componentDidMount() {\r\n    const match = matchPath(window.location.pathname, {\r\n      path: '/scenicSpot/:city?',\r\n    })\r\n    if (match) {\r\n      this.setState({ selectedCity: match.params.city })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const cityOptions = cities.map((city) => {\r\n      return (\r\n        <option value={city.value} key={city.value}>\r\n          {city.name}\r\n        </option>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <label className=\"col-auto col-form-label\" htmlFor=\"citySelect\">\r\n              請選擇景點範圍\r\n            </label>\r\n            <div className=\"col\">\r\n              <select\r\n                className=\"form-select\"\r\n                id=\"citySelect\"\r\n                onChange={this.handleSelectCity}\r\n                value={this.state.selectedCity}\r\n              >\r\n                {cityOptions}\r\n              </select>\r\n            </div>\r\n            <div className=\"col\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"篩選景點名稱\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport ScenicSpot from './components/ScenicSpot'\r\nimport NotFound from './components/NotFound'\r\nimport Welcome from './components/Welcome'\r\nimport Navbar from './components/layout/Navbar'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app vh-100 d-flex flex-column\">\r\n      <Navbar />\r\n      <div className=\"container d-flex flex-column overflow-auto\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Welcome} />\r\n          <Route path=\"/scenicSpot/:city?\" component={ScenicSpot} />\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const initState = {\r\n  spots: {\r\n    Taiwan: [],\r\n    Taipei: [],\r\n    NewTaipei: [],\r\n    Taoyuan: [],\r\n    Taichung: [],\r\n    Tainan: [],\r\n    Kaohsiung: [],\r\n    Keelung: [],\r\n    Hsinchu: [],\r\n    HsinchuCounty: [],\r\n    MiaoliCounty: [],\r\n    ChanghuaCounty: [],\r\n    NantouCounty: [],\r\n    YunlinCounty: [],\r\n    ChiayiCounty: [],\r\n    Chiayi: [],\r\n    PingtungCounty: [],\r\n    YilanCounty: [],\r\n    HualienCounty: [],\r\n    TaitungCounty: [],\r\n    KinmenCounty: [],\r\n    PenghuCounty: [],\r\n    LienchiangCounty: [],\r\n  },\r\n  isFetching: false,\r\n  hasMoreDataToFetch: {\r\n    Taiwan: true,\r\n    Taipei: true,\r\n    NewTaipei: true,\r\n    Taoyuan: true,\r\n    Taichung: true,\r\n    Tainan: true,\r\n    Kaohsiung: true,\r\n    Keelung: true,\r\n    Hsinchu: true,\r\n    HsinchuCounty: true,\r\n    MiaoliCounty: true,\r\n    ChanghuaCounty: true,\r\n    NantouCounty: true,\r\n    YunlinCounty: true,\r\n    ChiayiCounty: true,\r\n    Chiayi: true,\r\n    PingtungCounty: true,\r\n    YilanCounty: true,\r\n    HualienCounty: true,\r\n    TaitungCounty: true,\r\n    KinmenCounty: true,\r\n    PenghuCounty: true,\r\n    LienchiangCounty: true,\r\n  },\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    // 把各個城市的景點存起來\r\n    case 'SAVE_SCENIC_SPOT': {\r\n      const { city, newData } = action\r\n\r\n      const newSpots = {\r\n        ...state.spots,\r\n        [city]: [...state.spots[city], ...newData],\r\n      }\r\n      return {\r\n        ...state,\r\n        spots: newSpots,\r\n      }\r\n    }\r\n\r\n    // 更新城市是否還有更多資料可以抓取\r\n    case 'UPDATE_CITY_INFO': {\r\n      const { city, hasMoreDataToFetch } = action\r\n\r\n      const newHasMoreDataToFetch = {\r\n        ...state.hasMoreDataToFetch,\r\n        [city]: hasMoreDataToFetch,\r\n      }\r\n      return {\r\n        ...state,\r\n        hasMoreDataToFetch: newHasMoreDataToFetch,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default rootReducer\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}
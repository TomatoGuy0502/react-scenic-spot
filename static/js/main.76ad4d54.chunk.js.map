{"version":3,"sources":["api/client.js","api/scenicSpot.js","components/ScenicSpot/ScenicSpotListItem.js","components/ScenicSpot/LoadingStatus.js","helpers/function.js","components/ScenicSpot/ScenicSpot.js","store/actions/scenicSpotActions.js","components/NotFound.js","components/Welcome.js","components/layout/Navbar/SearchInput.js","components/layout/Navbar/CitiesSelect.js","components/layout/Navbar/Navbar.js","App.js","store/reducers/rootReducer.js","index.js"],"names":["client","axios","create","baseURL","params","format","interceptors","request","use","config","headers","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","Authorization","getAuthorizationHeader","synchronous","getScenicSpot","skip","a","numOfScenicSpot","city","get","$skip","$top","res","data","ScenicSpotListItem","spot","className","Name","Class1","Class2","Class3","Description","DescriptionDetail","Address","Phone","ID","LoadingStatus","loadingStatus","isLoading","loadingError","debounce","func","timer","timeout","args","clearTimeout","setTimeout","apply","cityList","undefined","ScenicSpot","props","checkScrollPosition","e","hasMoreDataToFetch","searchTerm","target","offsetHeight","scrollTop","scrollHeight","state","isFetching","setState","fetchData","spots","length","numOfScenicSpotToFetch","scenicSpots","saveScenicSpot","updateCityInfo","spotListRef","React","createRef","this","prevProps","oldCity","newCity","current","includes","to","ScenicSpotList","filter","match","map","showLoadingStatus","console","log","onScroll","ref","Component","connect","ownProps","dispatch","newData","type","NotFound","location","useLocation","pathname","Welcome","SearchInput","setSearchTerm","placeholder","value","onChange","trim","onClick","cities","name","CitiesSelect","selectedCity","handleSelectCity","history","push","matchPath","window","path","process","cityOptions","disabled","id","withRouter","Navbar","App","useState","exact","component","render","initState","Taiwan","Taipei","NewTaipei","Taoyuan","Taichung","Tainan","Kaohsiung","Keelung","Hsinchu","HsinchuCounty","MiaoliCounty","ChanghuaCounty","NantouCounty","YunlinCounty","ChiayiCounty","Chiayi","PingtungCounty","YilanCounty","HualienCounty","TaitungCounty","KinmenCounty","PenghuCounty","LienchiangCounty","rootReducer","action","newSpots","newHasMoreDataToFetch","store","createStore","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"6TAiBMA,EAASC,IAAMC,OAAO,CAC1BC,QAAS,uCACTC,OAAQ,CACNC,OAAQ,UAIZL,EAAOM,aAAaC,QAAQC,KAC1B,SAAUC,GAER,OADAA,EAAOC,QAAP,2BAAsBD,EAAOC,SAvBF,WAC7B,IAGMC,GAAY,IAAIC,MAAOC,cACvBC,EAAS,IAAIC,IAAM,QAAS,QAClCD,EAAOE,WAJQ,8BAIW,QAC1BF,EAAOG,OAAO,WAAaN,GAC3B,IAAMO,EAAOJ,EAAOK,QAAQ,OAG5B,MAAO,CAAEC,cAFU,yBARL,mCAQK,kEAAoFF,EAApF,KAEoB,SAAUP,GAYNU,IAClCZ,IAET,KACA,CAAEa,aAAa,IAGFtB,QC/BFuB,EAAa,uCAAG,WAAOC,GAAP,+BAAAC,EAAA,6DAAaC,EAAb,+BAA+B,GAAIC,EAAnC,+BAA0C,GAA1C,SACT3B,EAAO4B,IAAP,8BAAkCD,GAAQ,CAC1DvB,OAAQ,CACNyB,MAAOL,EACPM,KAAMJ,KAJiB,cACrBK,EADqB,yBAOpBA,EAAIC,MAPgB,2CAAH,sD,OCkBXC,MAlBf,YAAuC,IAATC,EAAQ,EAARA,KAC5B,OACE,qBAAkBC,UAAU,wCAA5B,UACE,oBAAIA,UAAU,UAAd,SAAyBD,EAAKE,OAC9B,sBAAKD,UAAU,OAAf,UACGD,EAAKG,QAAU,qBAAKF,UAAU,MAAf,SAAsBD,EAAKG,SAC1CH,EAAKI,QAAU,qBAAKH,UAAU,MAAf,SAAsBD,EAAKI,SAC1CJ,EAAKK,QAAU,qBAAKJ,UAAU,MAAf,SAAsBD,EAAKK,YAE7C,mBAAGJ,UAAU,iBAAb,SAA+BD,EAAKM,aAAeN,EAAKO,oBACxD,gCACE,oBAAGN,UAAU,iBAAb,+BAAkCD,EAAKQ,WACvC,oBAAGP,UAAU,iBAAb,+BAAkCD,EAAKS,cAVlCT,EAAKU,KCSHC,MAXf,YAAqD,IAC/CC,EADmBC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAQlC,OALEF,EADEE,IAGcD,EAAY,qBAAQ,gEAG/B,oBAAIZ,UAAU,8BAAd,SAA6CW,KCV/C,SAASG,EAASC,GAAsB,IACzCC,EADwC,OAAfC,EAAe,uDAAL,IAEvC,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaH,GACbA,EAAQI,YAAW,WACjBL,EAAKM,MAAM,EAAMH,KAChBD,ICGP,IAEMK,EAAW,MACfC,EACA,SACA,YACA,UACA,WACA,SACA,YACA,UACA,UACA,gBACA,eACA,iBACA,eACA,eACA,eACA,SACA,iBACA,cACA,gBACA,gBACA,eACA,eACA,oBAGIC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,oBAXmB,uCAWG,WAAOC,GAAP,qBAAArC,EAAA,yDAEf,EAAKmC,MAAMG,qBAAsB,EAAKH,MAAMI,WAF7B,sDAI8BF,EAAEG,OAA5CC,EAJY,EAIZA,aAAcC,EAJF,EAIEA,UAAWC,EAJb,EAIaA,aACf,IAAdD,GAAmBD,EAAeC,IAAcC,GAAiB,EAAKC,MAAMC,WAL5D,wBAMlB,EAAKC,SAAS,CAAED,YAAY,EAAMtB,aAAc,OAN9B,kBAQV,EAAKwB,YARK,yDAUhB,EAAKD,SAAS,CAAEvB,aAAc,iEAVd,QAYlB,EAAKuB,SAAS,CAAED,YAAY,IAZV,0DAXH,wDA2BnBE,UA3BmB,sBA2BP,8BAAA/C,EAAA,yDAEL,EAAKmC,MAAMG,mBAFN,wDAKqB,EAAKH,MAAMa,MAAMC,OAA1CC,EA5DiB,GAuDb,SAOgBpD,EACxB,EAAKqC,MAAMa,MAAMC,OACjBC,EACA,EAAKf,MAAMjC,MAVH,OAOJiD,EAPI,OAYV,EAAKhB,MAAMiB,eAAe,EAAKjB,MAAMjC,KAAMiD,GAGvCA,EAAYF,OAtEO,IAuErB,EAAKd,MAAMkB,eAAe,EAAKlB,MAAMjC,MAAM,GAhBnC,2CAxBV,EAAK0C,MAAQ,CACXC,YAAY,EACZtB,aAAc,MAEhB,EAAK+B,YAAcC,IAAMC,YAPR,E,4FA+CnB,sBAAAxD,EAAA,sDACEyD,KAAKV,YADP,gD,6HAKA,WAAyBW,GAAzB,iBAAA1D,EAAA,sDACQ2D,EAAUD,EAAUxD,KACpB0D,EAAUH,KAAKtB,MAAMjC,KAEvByD,IAAYC,IACdH,KAAKH,YAAYO,QAAQnB,UAAY,EAEL,IAA5Be,KAAKtB,MAAMa,MAAMC,QACnBQ,KAAKV,aARX,gD,2EAaA,WAAU,IAAD,OAEP,IAAKf,EAAS8B,SAASL,KAAKtB,MAAMjC,MAChC,OAAO,cAAC,IAAD,CAAU6D,GAAG,gBAGtB,IAAMC,EAAiBP,KAAKtB,MAAMa,MAC/BiB,QAAO,SAACxD,GACP,OAAOA,EAAKE,KAAKuD,MAAM,EAAK/B,MAAMI,eAEnC4B,KAAI,SAAC1D,GACJ,OAAO,cAAC,EAAD,CAAkCA,KAAMA,GAAfA,EAAKU,OAGnCG,EAAYmC,KAAKb,MAAMC,YAA0C,IAA5BY,KAAKtB,MAAMa,MAAMC,OAEtDmB,EAAoBX,KAAKtB,MAAMG,qBAAuBmB,KAAKtB,MAAMI,WAEvE,OADA8B,QAAQC,IAAI,4BAEV,qBAAK5D,UAAU,qCAAf,SACE,qBACEA,UAAU,sCACV6D,SAAU/C,EAASiC,KAAKrB,qBACxBoC,IAAKf,KAAKH,YAHZ,UAKGU,EACAI,GACC,cAAC,EAAD,CAAe9C,UAAWA,EAAWC,aAAckC,KAAKb,MAAMrB,wB,GA7FjDkD,aA4HVC,eAvBS,SAAC9B,EAAO+B,GAC9B,IAAMzE,EAAOyE,EAAST,MAAMvF,OAAOuB,KAC7BoC,OACKL,IAAT/B,EAAqB0C,EAAMN,mBAAmBpC,GAAQ0C,EAAMN,mBAAN,OACxD,MAAO,CACLU,MAAOJ,EAAMI,MAAM9C,IAAS0C,EAAMI,MAAN,OAC5BV,qBACApC,OACAqC,WAAYoC,EAASpC,eAIE,SAACqC,GAC1B,MAAO,CACLxB,eAAgB,SAAClD,EAAM2E,GACrBD,ECzJwB,WAC5B,MAAO,CACLE,KAAM,mBACN5E,KAH6D,uDAA3B,SAIlC2E,QAJ6D,uDAAP,IDyJ3CzB,CAAelD,EAAM2E,KAEhCxB,eAAgB,SAACnD,EAAMoC,GACrBsC,ECpJwB,WAC5B,MAAO,CACLE,KAAM,mBACN5E,KAHmE,uDAAjC,SAIlCoC,mBAJmE,wCDoJxDe,CAAenD,EAAMoC,QAKrBoC,CAA6CxC,GElJ7C6C,MAZf,WACE,IAAMC,EAAWC,cAEjB,OACE,8BACE,2DACY,+BAAOD,EAASE,iBCOnBC,MAbf,WACE,OACE,qBAAKzE,UAAU,sEAAf,SACE,gCACE,oBAAIA,UAAU,OAAd,4FACA,cAAC,IAAD,CAAMqD,GAAG,cAAcrD,UAAU,sBAAjC,wDCmBO0E,MAzBf,YAAqD,IAA9B7C,EAA6B,EAA7BA,WAAY8C,EAAiB,EAAjBA,cASjC,OACE,sBAAK3E,UAAU,cAAf,UACE,uBACEoE,KAAK,OACLpE,UAAU,eACV4E,YAAY,uCACZC,MAAOhD,EACPiD,SAfoB,SAACnD,GACzBgD,EAAchD,EAAEG,OAAO+C,MAAME,WAgB3B,wBAAQ/E,UAAU,oBAAoBgF,QAbjB,WACvBL,EAAc,KAYZ,8BCjBAM,EAAS,CACb,CAAEJ,MAAO,UAAWK,KAAM,kCAC1B,CAAEL,MAAO,GAAIK,KAAM,mCACnB,CAAEL,MAAO,SAAUK,KAAM,6BACzB,CAAEL,MAAO,YAAaK,KAAM,gCAC5B,CAAEL,MAAO,UAAWK,KAAM,8BAC1B,CAAEL,MAAO,WAAYK,KAAM,+BAC3B,CAAEL,MAAO,SAAUK,KAAM,6BACzB,CAAEL,MAAO,YAAaK,KAAM,gCAC5B,CAAEL,MAAO,UAAWK,KAAM,8BAC1B,CAAEL,MAAO,UAAWK,KAAM,8BAC1B,CAAEL,MAAO,gBAAiBK,KAAM,oCAChC,CAAEL,MAAO,eAAgBK,KAAM,mCAC/B,CAAEL,MAAO,iBAAkBK,KAAM,qCACjC,CAAEL,MAAO,eAAgBK,KAAM,mCAC/B,CAAEL,MAAO,eAAgBK,KAAM,mCAC/B,CAAEL,MAAO,eAAgBK,KAAM,mCAC/B,CAAEL,MAAO,SAAUK,KAAM,6BACzB,CAAEL,MAAO,iBAAkBK,KAAM,qCACjC,CAAEL,MAAO,cAAeK,KAAM,kCAC9B,CAAEL,MAAO,gBAAiBK,KAAM,oCAChC,CAAEL,MAAO,gBAAiBK,KAAM,oCAChC,CAAEL,MAAO,eAAgBK,KAAM,mCAC/B,CAAEL,MAAO,eAAgBK,KAAM,mCAC/B,CAAEL,MAAO,mBAAoBK,KAAM,wCAG/BC,E,4MACJjD,MAAQ,CACNkD,aAAc,I,EAIhBC,iBAAmB,SAAC1D,GAClB,EAAKS,SAAS,CAAEgD,aAAczD,EAAEG,OAAO+C,QACvC,EAAKpD,MAAM6D,QAAQC,KAAnB,sBAAuC5D,EAAEG,OAAO+C,S,uDAIlD,WACE,IAAMrB,EAAQgC,YAAUC,OAAOnB,SAASE,SAAU,CAChDkB,KAAK,GAAD,OAAKC,qBAAL,wBAEFnC,GACFT,KAAKX,SAAS,CAAEgD,aAAc5B,EAAMvF,OAAOuB,S,oBAI/C,WACE,IAAMoG,EAAcX,EAAOxB,KAAI,SAACjE,GAC9B,OACE,wBACEqF,MAAOrF,EAAKqF,MAEZgB,SAAyB,YAAfrG,EAAKqF,OAA6B,KAH9C,SAKGrF,EAAK0F,MAHD1F,EAAKqF,UAQhB,OACE,wBACE7E,UAAU,cACV8F,GAAG,aACHhB,SAAU/B,KAAKsC,iBACfR,MAAO9B,KAAKb,MAAMkD,aAJpB,SAMGQ,Q,GAzCkB7B,aA+CZgC,cAAWZ,GCxDXa,MAjBf,SAAgBvE,GACd,OACE,qBAAKzB,UAAU,+BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAa6B,WAAYJ,EAAMI,WAAY8C,cAAelD,EAAMkD,0BCc7DsB,MApBf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNrE,EADM,KACM8C,EADN,KAGb,OACE,sBAAK3E,UAAU,gCAAf,UACE,cAAC,EAAD,CAAQ6B,WAAYA,EAAY8C,cAAeA,IAC/C,qBAAK3E,UAAU,yCAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0F,KAAK,IAAIS,OAAK,EAACC,UAAW3B,IACjC,cAAC,IAAD,CACEiB,KAAK,qBACLW,OAAQ,SAAC5E,GAAD,OAAW,cAAC,EAAD,2BAAgBA,GAAhB,IAAuBI,WAAYA,QAExD,cAAC,IAAD,CAAO6D,KAAK,IAAIU,UAAW/B,a,wBCpB/BiC,EAAY,CAChBhE,MAAO,CACLiE,OAAQ,GACRC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,cAAe,GACfC,aAAc,GACdC,eAAgB,GAChBC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,OAAQ,GACRC,eAAgB,GAChBC,YAAa,GACbC,cAAe,GACfC,cAAe,GACfC,aAAc,GACdC,aAAc,GACdC,iBAAkB,IAEpB1F,YAAY,EACZP,mBAAoB,CAClB2E,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,SAAS,EACTC,eAAe,EACfC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,QAAQ,EACRC,gBAAgB,EAChBC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,cAAc,EACdC,cAAc,EACdC,kBAAkB,IAuCPC,EAnCK,WAAgC,IAA/B5F,EAA8B,uDAAtBoE,EAAWyB,EAAW,uCACjD,OAAQA,EAAO3D,MAEb,IAAK,mBAAqB,IAChB5E,EAAkBuI,EAAlBvI,KAAM2E,EAAY4D,EAAZ5D,QAER6D,EAAQ,2BACT9F,EAAMI,OADG,kBAEX9C,EAFW,sBAEA0C,EAAMI,MAAM9C,IAFZ,YAEsB2E,MAEpC,OAAO,2BACFjC,GADL,IAEEI,MAAO0F,IAKX,IAAK,mBAAqB,IAChBxI,EAA6BuI,EAA7BvI,KAAMoC,EAAuBmG,EAAvBnG,mBAERqG,EAAqB,2BACtB/F,EAAMN,oBADgB,kBAExBpC,EAAOoC,IAEV,OAAO,2BACFM,GADL,IAEEN,mBAAoBqG,IAIxB,QACE,OAAO/F,IC5EPgG,EAAQC,YAAYL,GAE1BM,IAAS/B,OACP,cAAC,IAAMgC,WAAP,UACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAQI,SAAU3C,qBAAlB,SACE,cAAC,EAAD,UAIN4C,SAASC,eAAe,W","file":"static/js/main.76ad4d54.chunk.js","sourcesContent":["import axios from 'axios'\nimport jsSHA from 'jssha'\n\nconst getAuthorizationHeader = () => {\n  const AppID = '6719c6e7e3564c948c45a978bc4a9fc2'\n  const AppKey = 'tOl73VQNaCJmrbt_FvSSQnBM7JM'\n\n  const GMTString = new Date().toGMTString()\n  const ShaObj = new jsSHA('SHA-1', 'TEXT')\n  ShaObj.setHMACKey(AppKey, 'TEXT')\n  ShaObj.update('x-date: ' + GMTString)\n  const HMAC = ShaObj.getHMAC('B64')\n  const Authorization = `hmac username=\"${AppID}\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"${HMAC}\"`\n\n  return { Authorization: Authorization, 'X-Date': GMTString }\n}\n\nconst client = axios.create({\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2',\n  params: {\n    format: 'JSON',\n  },\n})\n\nclient.interceptors.request.use(\n  function (config) {\n    config.headers = { ...config.headers, ...getAuthorizationHeader() }\n    return config\n  },\n  null,\n  { synchronous: true }\n)\n\nexport default client\n","import client from './client'\n\nexport const getScenicSpot = async (skip, numOfScenicSpot = 30, city = '') => {\n  const res = await client.get(`/Tourism/ScenicSpot/${city}`, {\n    params: {\n      $skip: skip,\n      $top: numOfScenicSpot,\n    },\n  })\n  return res.data\n}\n","import React from 'react'\n\nfunction ScenicSpotListItem({ spot }) {\n  return (\n    <li key={spot.ID} className=\"scenic-spot-list-item list-group-item\">\n      <h2 className=\"fw-bold\">{spot.Name}</h2>\n      <div className=\"mb-2\">\n        {spot.Class1 && <div className=\"tag\">{spot.Class1}</div>}\n        {spot.Class2 && <div className=\"tag\">{spot.Class2}</div>}\n        {spot.Class3 && <div className=\"tag\">{spot.Class3}</div>}\n      </div>\n      <p className=\"text-dark my-3\">{spot.Description || spot.DescriptionDetail}</p>\n      <div>\n        <p className=\"m-0 text-muted\">地址：{spot.Address}</p>\n        <p className=\"m-0 text-muted\">電話：{spot.Phone}</p>\n      </div>\n    </li>\n  )\n}\n\nexport default ScenicSpotListItem\n","import React from 'react'\n\nfunction LoadingStatus({ isLoading, loadingError }) {\n  let loadingStatus\n  if (loadingError) {\n    loadingStatus = loadingError\n  } else {\n    loadingStatus = isLoading ? '載入中' : '下滑至底載入更多資料'\n  }\n\n  return <li className=\"list-group-item text-center\">{loadingStatus}</li>\n}\n\nexport default LoadingStatus\n","export function debounce(func, timeout = 300) {\n  let timer\n  return (...args) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      func.apply(this, args)\n    }, timeout)\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { getScenicSpot } from '../../api/scenicSpot'\nimport ScenicSpotListItem from './ScenicSpotListItem'\nimport LoadingStatus from './LoadingStatus'\nimport { saveScenicSpot, updateCityInfo } from '../../store/actions/scenicSpotActions'\nimport { debounce } from '../../helpers/function'\n\nconst NUM_OF_FIRST_LOAD = 30\nconst NUM_OF_SCROLL_LOAD = 30\nconst cityList = [\n  undefined, // 全台\n  'Taipei',\n  'NewTaipei',\n  'Taoyuan',\n  'Taichung',\n  'Tainan',\n  'Kaohsiung',\n  'Keelung',\n  'Hsinchu',\n  'HsinchuCounty',\n  'MiaoliCounty',\n  'ChanghuaCounty',\n  'NantouCounty',\n  'YunlinCounty',\n  'ChiayiCounty',\n  'Chiayi',\n  'PingtungCounty',\n  'YilanCounty',\n  'HualienCounty',\n  'TaitungCounty',\n  'KinmenCounty',\n  'PenghuCounty',\n  'LienchiangCounty',\n]\n\nclass ScenicSpot extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isFetching: false,\n      loadingError: null,\n    }\n    this.spotListRef = React.createRef()\n  }\n\n  // 滾動時檢查是否到達最底，是則載入新資料\n  checkScrollPosition = async (e) => {\n    // 若 已經沒有新資料可抓取 或 正在搜尋，則不需檢查了\n    if (!this.props.hasMoreDataToFetch || this.props.searchTerm) return\n\n    const { offsetHeight, scrollTop, scrollHeight } = e.target\n    if (scrollTop !== 0 && offsetHeight + scrollTop === scrollHeight && !this.state.isFetching) {\n      this.setState({ isFetching: true, loadingError: null })\n      try {\n        await this.fetchData()\n      } catch (error) {\n        this.setState({ loadingError: '出現錯誤，請重新嘗試' })\n      }\n      this.setState({ isFetching: false })\n    }\n  }\n\n  fetchData = async () => {\n    // 先檢查是否還有資料可以抓取\n    if (!this.props.hasMoreDataToFetch) return\n\n    // 檢查是首次抓取還是已經抓過資料，調整抓取的數量\n    const numOfScenicSpotToFetch = this.props.spots.length ? NUM_OF_SCROLL_LOAD : NUM_OF_FIRST_LOAD\n\n    const scenicSpots = await getScenicSpot(\n      this.props.spots.length,\n      numOfScenicSpotToFetch,\n      this.props.city\n    )\n    this.props.saveScenicSpot(this.props.city, scenicSpots)\n\n    // 若抓到的資料比想要的資料少，代表沒有更多資料可以抓了\n    if (scenicSpots.length < NUM_OF_SCROLL_LOAD) {\n      this.props.updateCityInfo(this.props.city, false)\n    }\n  }\n\n  async componentDidMount() {\n    this.fetchData()\n  }\n\n  // 檢查是否換了不同的地區\n  async componentDidUpdate(prevProps) {\n    const oldCity = prevProps.city\n    const newCity = this.props.city\n\n    if (oldCity !== newCity) {\n      this.spotListRef.current.scrollTop = 0\n      // 有資料就先不要再抓了，滑到底再來抓\n      if (this.props.spots.length === 0) {\n        this.fetchData()\n      }\n    }\n  }\n\n  render() {\n    // 確認城市名稱是正確的\n    if (!cityList.includes(this.props.city)) {\n      return <Redirect to=\"/scenicSpot\" />\n    }\n\n    const ScenicSpotList = this.props.spots\n      .filter((spot) => {\n        return spot.Name.match(this.props.searchTerm)\n      })\n      .map((spot) => {\n        return <ScenicSpotListItem key={spot.ID} spot={spot} />\n      })\n\n    const isLoading = this.state.isFetching || this.props.spots.length === 0\n    // 當有更多資料要抓取，且沒有在搜尋時才顯示loading status\n    const showLoadingStatus = this.props.hasMoreDataToFetch && !this.props.searchTerm\n    console.log('重新渲染')\n    return (\n      <div className=\"scenicSpot container overflow-auto\">\n        <ul\n          className=\"list-group overflow-auto h-100 py-3\"\n          onScroll={debounce(this.checkScrollPosition)}\n          ref={this.spotListRef}\n        >\n          {ScenicSpotList}\n          {showLoadingStatus && (\n            <LoadingStatus isLoading={isLoading} loadingError={this.state.loadingError} />\n          )}\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const city = ownProps.match.params.city\n  const hasMoreDataToFetch =\n    city !== undefined ? state.hasMoreDataToFetch[city] : state.hasMoreDataToFetch['Taiwan']\n  return {\n    spots: state.spots[city] || state.spots['Taiwan'],\n    hasMoreDataToFetch,\n    city,\n    searchTerm: ownProps.searchTerm,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveScenicSpot: (city, newData) => {\n      dispatch(saveScenicSpot(city, newData))\n    },\n    updateCityInfo: (city, hasMoreDataToFetch) => {\n      dispatch(updateCityInfo(city, hasMoreDataToFetch))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScenicSpot)\n","export const saveScenicSpot = (city = 'Taiwan', newData = []) => {\n  return {\n    type: 'SAVE_SCENIC_SPOT',\n    city,\n    newData,\n  }\n}\n\nexport const updateCityInfo = (city = 'Taiwan', hasMoreDataToFetch) => {\n  return {\n    type: 'UPDATE_CITY_INFO',\n    city,\n    hasMoreDataToFetch,\n  }\n}\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nfunction NotFound() {\n  const location = useLocation()\n\n  return (\n    <div>\n      <h3>\n        Oops! 找不到 <code>{location.pathname}</code>\n      </h3>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Welcome() {\n  return (\n    <div className=\"welcome h-100 d-flex flex-column justify-content-center text-center\">\n      <div>\n        <h1 className=\"mb-5\">歡迎光臨｡:.ﾟヽ(*´∀`)ﾉﾟ.:｡</h1>\n        <Link to=\"/scenicSpot\" className=\"btn btn-lg btn-info\">\n          開始瀏覽景點\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Welcome\n","import React from 'react'\n\nfunction SearchInput({ searchTerm, setSearchTerm }) {\n  const handleInputChange = (e) => {\n    setSearchTerm(e.target.value.trim())\n  }\n\n  const handleInputReset = () => {\n    setSearchTerm('')\n  }\n\n  return (\n    <div className=\"input-group\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"篩選景點名稱\"\n        value={searchTerm}\n        onChange={handleInputChange}\n      />\n      <button className=\"btn btn-secondary\" onClick={handleInputReset}>\n        清除\n      </button>\n    </div>\n  )\n}\n\nexport default SearchInput\n","import React, { Component } from 'react'\nimport { withRouter, matchPath } from 'react-router-dom'\n\nconst cities = [\n  { value: 'default', name: '請選擇範圍' },\n  { value: '', name: '全台景點 Taiwan' },\n  { value: 'Taipei', name: '臺北市 Taipei' },\n  { value: 'NewTaipei', name: '新北市 NewTaipei' },\n  { value: 'Taoyuan', name: '桃園市 Taoyuan' },\n  { value: 'Taichung', name: '臺中市 Taichung' },\n  { value: 'Tainan', name: '臺南市 Tainan' },\n  { value: 'Kaohsiung', name: '高雄市 Kaohsiung' },\n  { value: 'Keelung', name: '基隆市 Keelung' },\n  { value: 'Hsinchu', name: '新竹市 Hsinchu' },\n  { value: 'HsinchuCounty', name: '新竹縣 HsinchuCounty' },\n  { value: 'MiaoliCounty', name: '苗栗縣 MiaoliCounty' },\n  { value: 'ChanghuaCounty', name: '彰化縣 ChanghuaCounty' },\n  { value: 'NantouCounty', name: '南投縣 NantouCounty' },\n  { value: 'YunlinCounty', name: '雲林縣 YunlinCounty' },\n  { value: 'ChiayiCounty', name: '嘉義縣 ChiayiCounty' },\n  { value: 'Chiayi', name: '嘉義市 Chiayi' },\n  { value: 'PingtungCounty', name: '屏東縣 PingtungCounty' },\n  { value: 'YilanCounty', name: '宜蘭縣 YilanCounty' },\n  { value: 'HualienCounty', name: '花蓮縣 HualienCounty' },\n  { value: 'TaitungCounty', name: '臺東縣 TaitungCounty' },\n  { value: 'KinmenCounty', name: '金門縣 KinmenCounty' },\n  { value: 'PenghuCounty', name: '澎湖縣 PenghuCounty' },\n  { value: 'LienchiangCounty', name: '連江縣 LienchiangCounty' },\n]\n\nclass CitiesSelect extends Component {\n  state = {\n    selectedCity: '',\n  }\n\n  // 選擇特定城市\n  handleSelectCity = (e) => {\n    this.setState({ selectedCity: e.target.value })\n    this.props.history.push(`/scenicSpot/${e.target.value}`)\n  }\n\n  // 首次進入時，依照url更新選項\n  componentDidMount() {\n    const match = matchPath(window.location.pathname, {\n      path: `${process.env.PUBLIC_URL}/scenicSpot/:city?`,\n    })\n    if (match) {\n      this.setState({ selectedCity: match.params.city })\n    }\n  }\n\n  render() {\n    const cityOptions = cities.map((city) => {\n      return (\n        <option\n          value={city.value}\n          key={city.value}\n          disabled={city.value === 'default' ? true : null}\n        >\n          {city.name}\n        </option>\n      )\n    })\n\n    return (\n      <select\n        className=\"form-select\"\n        id=\"citySelect\"\n        onChange={this.handleSelectCity}\n        value={this.state.selectedCity}\n      >\n        {cityOptions}\n      </select>\n    )\n  }\n}\n\nexport default withRouter(CitiesSelect)\n","import React from 'react'\nimport SearchInput from './SearchInput'\nimport CitiesSelect from './CitiesSelect'\n\nfunction Navbar(props) {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <CitiesSelect />\n          </div>\n          <div className=\"col\">\n            <SearchInput searchTerm={props.searchTerm} setSearchTerm={props.setSearchTerm} />\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { useState } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport ScenicSpot from './components/ScenicSpot/ScenicSpot'\nimport NotFound from './components/NotFound'\nimport Welcome from './components/Welcome'\nimport Navbar from './components/layout/Navbar/Navbar'\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState('')\n\n  return (\n    <div className=\"app vh-100 d-flex flex-column\">\n      <Navbar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n      <div className=\"d-flex flex-column overflow-auto h-100\">\n        <Switch>\n          <Route path=\"/\" exact component={Welcome} />\n          <Route\n            path=\"/scenicSpot/:city?\"\n            render={(props) => <ScenicSpot {...props} searchTerm={searchTerm} />}\n          />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const initState = {\n  spots: {\n    Taiwan: [],\n    Taipei: [],\n    NewTaipei: [],\n    Taoyuan: [],\n    Taichung: [],\n    Tainan: [],\n    Kaohsiung: [],\n    Keelung: [],\n    Hsinchu: [],\n    HsinchuCounty: [],\n    MiaoliCounty: [],\n    ChanghuaCounty: [],\n    NantouCounty: [],\n    YunlinCounty: [],\n    ChiayiCounty: [],\n    Chiayi: [],\n    PingtungCounty: [],\n    YilanCounty: [],\n    HualienCounty: [],\n    TaitungCounty: [],\n    KinmenCounty: [],\n    PenghuCounty: [],\n    LienchiangCounty: [],\n  },\n  isFetching: false,\n  hasMoreDataToFetch: {\n    Taiwan: true,\n    Taipei: true,\n    NewTaipei: true,\n    Taoyuan: true,\n    Taichung: true,\n    Tainan: true,\n    Kaohsiung: true,\n    Keelung: true,\n    Hsinchu: true,\n    HsinchuCounty: true,\n    MiaoliCounty: true,\n    ChanghuaCounty: true,\n    NantouCounty: true,\n    YunlinCounty: true,\n    ChiayiCounty: true,\n    Chiayi: true,\n    PingtungCounty: true,\n    YilanCounty: true,\n    HualienCounty: true,\n    TaitungCounty: true,\n    KinmenCounty: true,\n    PenghuCounty: true,\n    LienchiangCounty: true,\n  },\n}\n\nconst rootReducer = (state = initState, action) => {\n  switch (action.type) {\n    // 把各個城市的景點存起來\n    case 'SAVE_SCENIC_SPOT': {\n      const { city, newData } = action\n\n      const newSpots = {\n        ...state.spots,\n        [city]: [...state.spots[city], ...newData],\n      }\n      return {\n        ...state,\n        spots: newSpots,\n      }\n    }\n\n    // 更新城市是否還有更多資料可以抓取\n    case 'UPDATE_CITY_INFO': {\n      const { city, hasMoreDataToFetch } = action\n\n      const newHasMoreDataToFetch = {\n        ...state.hasMoreDataToFetch,\n        [city]: hasMoreDataToFetch,\n      }\n      return {\n        ...state,\n        hasMoreDataToFetch: newHasMoreDataToFetch,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default rootReducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}